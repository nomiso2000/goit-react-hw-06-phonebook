{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Notification/Notification.module.css","Components/App/App.module.css","Components/ContactForm/ContactForm.module.css","Components/redux/item/itemTypes.js","Components/redux/item/itemReducer.js","Components/redux/store.js","Components/redux/item/itemActions.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/App/header.js","Components/Notification/Notification.js","Components/Filter/Filter.js","Components/App/App.js","index.js"],"names":["module","exports","itemsReducer","createReducer","itemTypes","state","action","payload","items","filter","contact","id","toggle","combineReducers","store","configureStore","reducer","addItem","createAction","actionTypes","name","number","uuidv4","deleteItem","setFilter","setVisible","mapDispatchToProps","itemActions","connect","console","log","lowerFilter","toLowerCase","includes","TransitionGroup","component","className","styles","list","map","CSSTransition","key","classNames","timeout","item","button","type","onClick","ContactForm","handleChange","target","setState","value","handleSubmit","e","preventDefault","contains","props","contacts","toggleNotification","onAddItem","clearState","array","some","el","this","onSubmit","placeholder","onChange","Component","itemsAction","Header","Notification","notificationBox","onSetFilter","itemAction","loginInputId","notific","contactsLength","length","container","in","appear","stylesNotification","unmountOnExit","onEntered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d7fe9e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2OwBr\",\"list\":\"ContactList_list__3PYSe\",\"item\":\"ContactList_item__3VNd2\",\"enter\":\"ContactList_enter__iAby8\",\"enterActive\":\"ContactList_enterActive__2Dib1\",\"exit\":\"ContactList_exit__3dPg2\",\"exitActive\":\"ContactList_exitActive__25Jya\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationBox\":\"Notification_notificationBox__1eSf-\",\"enter\":\"Notification_enter__JTst8\",\"enterActive\":\"Notification_enterActive__2Sz5z\",\"exit\":\"Notification_exit__1bx7J\",\"exitActive\":\"Notification_exitActive__GuqTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1WpVy\",\"appear\":\"App_appear__3lJh9\",\"appearActive\":\"App_appearActive__2e-rR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1gTyM\"};","const ADD = 'items/add';\r\nconst DELETE = 'items/delete';\r\nconst SETFILTER = 'items/setFilter';\r\nconst TOGGLENOT = 'items/toggle'\r\n\r\nexport default {\r\n    ADD,\r\n    DELETE,\r\n    SETFILTER,\r\n    TOGGLENOT\r\n}","\r\nimport {combineReducers} from 'redux';\r\nimport itemTypes from './itemTypes'\r\nimport {createReducer} from '@reduxjs/toolkit'\r\n\r\n\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [itemTypes.ADD]:(state, action) => [...state, action.payload.items],\r\n    [itemTypes.DELETE]: (state, action) => state.filter((contact) => contact.id !== action.payload.id)\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n    [itemTypes.SETFILTER]: (state, action) => action.payload.filter\r\n})\r\n\r\nconst toggle = createReducer( false, {\r\n    [itemTypes.TOGGLENOT]: (state, {payload}) => !state,\r\n}\r\n)\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    filter,\r\n    toggle\r\n})","\r\nimport {configureStore} from '@reduxjs/toolkit'\r\nimport itemsReducer from './item/itemReducer'\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        items: itemsReducer,\r\n    }\r\n})\r\nexport default store;","import { v4 as uuidv4 } from \"uuid\";\r\nimport actionTypes from './itemTypes'\r\nimport {createAction} from '@reduxjs/toolkit'\r\nconst addItem = createAction(actionTypes.ADD, (name, number) => ({\r\n    payload: { items: {\r\n        id: uuidv4(),\r\n        name,\r\n        number\r\n    },\r\n    },\r\n}))\r\n\r\nconst deleteItem = createAction(actionTypes.DELETE, id => ({\r\n    payload: {\r\n        id,\r\n    },\r\n}));\r\n\r\nconst setFilter = createAction(actionTypes.SETFILTER, filter => ({\r\n    payload: {\r\n        filter,\r\n    },\r\n}));\r\n\r\nconst setVisible = createAction(actionTypes.TOGGLENOT)\r\n\r\nexport default {\r\n    addItem,\r\n    deleteItem,\r\n    setFilter,\r\n    setVisible\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport itemActions from '../redux/item/itemActions'\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ items, deleteItem }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list} >\r\n        {items.map(({ name, id, number }) => {\r\n          return (\r\n            <CSSTransition key={id}  classNames={styles} timeout={250}    > \r\n          <li className={styles.item}>\r\n            <span>\r\n              {name} {number}\r\n            </span>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => deleteItem(id)}\r\n  \r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n          </CSSTransition>\r\n\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    \r\n  );\r\n};\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  deleteItem: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state)\r\n  const {items, filter} = state.items\r\n  const lowerFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(contact =>  contact.name.toLowerCase().includes(lowerFilter),);\r\n  return   {  items: visibleContacts}\r\n}\r\n\r\n  const mapDispatchToProps = {\r\n    deleteItem: itemActions.deleteItem\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux'\r\nimport itemsAction from '../redux/item/itemActions'\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddItem: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n contains(array, value) {\r\n   return array.some( el => el.name.toLowerCase() === value.toLowerCase()\r\n   );\r\n }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n       if( this.contains(this.props.contacts, this.state.name)) {\r\n        this.props.toggleNotification()\r\n       } else if( this.state.name && this.state.number) {\r\n       this.props.onAddItem(this.state.name, this.state.number )\r\n       }\r\n     \r\n    this.clearState();\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    \r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    \r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter your name...\"\r\n          onChange={this.handleChange}\r\n          value={name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder=\"Enter your number...\"\r\n          onChange={this.handleChange}\r\n          value={number}\r\n        />\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.items.items\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  onAddItem: itemsAction.addItem ,\r\n  toggleNotification: itemsAction.setVisible\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps )(ContactForm);\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1>Phonebook</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = () => {\r\n  return <div className={styles.notificationBox}>Contact already exist!</div>;\r\n};\r\n\r\nexport default Notification;","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux'\r\nimport itemAction from '../redux/item/itemActions'\r\n\r\nconst Filter = ({ onSetFilter, value }) => {\r\n  const loginInputId = uuidv4();\r\n  console.log(value);\r\n  return (\r\n    <div>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        onChange={e => onSetFilter(e.target.value)}\r\n        value={value}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id={loginInputId}\r\n        placeholder=\"Enter a name to search...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onSetFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    value: state.items.filter\r\n  }\r\n);\r\nconst mapDispatchToProps = {\r\n  onSetFilter: itemAction.setFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Header from \"./header\";\nimport itemsAction from '../redux/item/itemActions'\nimport { CSSTransition } from \"react-transition-group\";\nimport {connect} from 'react-redux'\nimport Notification from '../Notification/Notification'\nimport stylesNotification from '../Notification/Notification.module.css'\nimport Filter from \"../Filter/Filter\";\nimport styles from \"./App.module.css\";\n\nfunction App ({contacts, notific, toggleNotification}) {\n  console.log(toggleNotification)\n  const contactsLength = contacts.length\n    return (\n      <div className={styles.container}>\n         <CSSTransition\n          in={true}\n          classNames={styles}\n          timeout={500}\n          appear={true}\n        >         \n         <Header />\n         </CSSTransition>\n\n          <CSSTransition \n           in={notific}\n           timeout={1000} \n           classNames={stylesNotification}  \n           unmountOnExit\n           onEntered={() => toggleNotification()}  \n            > \n            <Notification/></CSSTransition>\n\n\n          <ContactForm  />\n          {contactsLength > 1 &&     \n        <> \n          <h2>Contacts</h2>\n          <Filter />\n        </> \n}\n \n        <ContactList  />\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    notific: state.items.toggle,\n    contacts: state.items.items\n  }\n}\nconst mapDispatchToProps = {\n  toggleNotification: itemsAction.setVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport {Provider} from 'react-redux'\nimport store from './Components/redux/store'\nimport App from \"./Components/App/App\";\n\nReactDOM.render( <Provider store={store}><App /></Provider>, document.getElementById(\"root\"));\n"],"sourceRoot":""}